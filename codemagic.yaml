workflows:
  android-deploy-workflow:
    name: Android Deployment Workflow
    instance_type: mac_mini_m2
    max_build_duration: 120
    triggering:
      events:
        - tag
      tag_patterns:
        - pattern: "v*-ios-cm"
          include: true
        - pattern: "v*-mobile-cm"
          include: true
      cancel_previous_builds: true
    environment:
      groups:
        - google_credentials
      flutter: 3.35.3
      xcode: 16.4
      cocoapods: 1.16.2
    scripts:
      - name: Set up local.properties
        script: | 
          echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
    
      - name: Setup the keystore
        script: |
          echo $KEYSTORE_FILE | base64 --decode > /tmp/keystore.jks
          cat >> "$CM_BUILD_DIR/android/key.properties" << EOF
          storePassword=$KEYSTORE_PASSWORD
          keyPassword=$KEYSTORE_KEY_PASSWORD
          keyAlias=upload
          storeFile=/tmp/keystore.jks
          EOF
      - name: Build AAB for Dev
        script: |
          cd $CM_BUILD_DIR
          flutter packages pub get
          flutter build appbundle --flavor dev --build-number=$PROJECT_BUILD_NUMBER
      - name: Build AAB for Prod
        script: |
          cd $CM_BUILD_DIR
          flutter packages pub get
          flutter build appbundle --flavor prod --build-number=$PROJECT_BUILD_NUMBER

    artifacts:
      - build/**/outputs/**/*.aab
    # publishing:
    #   google_play:
    #     credentials: $GOOGLE_PLAY_SERVICE_ACCOUNT
    #     track: internal
    #     submit_as_draft: true
  android-workflow:
    name: Android Workflow
    instance_type: mac_mini_m2
    max_build_duration: 120
    environment:
      groups:
        - google_credentials # <-- (Includes GCLOUD_KEY_FILE, GOOGLE_CREDENTIALS)
      vars:
        FIREBASE_PROJECT: "testcodemagic-250f0"
      flutter: 3.35.3
      xcode: 16.4
      cocoapods: 1.16.2
    scripts:
      - name: Get Flutter packages
        script: |
          flutter packages pub get
      - name: Build APK with Flutter
        script: |
          flutter build apk --debug
      - name: Create debug and test APK
        script: |
          set -ex
          cd android
          ./gradlew app:assembleAndroidTest
          ./gradlew app:assembleDebug -Ptarget="$CM_BUILD_DIR/integration_test/app_test.dart"
      - name: Run Firebase Test Lab tests
        script: |
          set -ex

          echo $GCLOUD_KEY_FILE | base64 --decode > ./gcloud_key_file.json

          gcloud auth activate-service-account --key-file=gcloud_key_file.json

          gcloud --quiet config set project $FIREBASE_PROJECT

          gcloud firebase test android run \
            --type instrumentation \
            --app build/app/outputs/apk/debug/app-debug.apk \
            --test build/app/outputs/apk/androidTest/debug/app-debug-androidTest.apk \
            --timeout 3m
    artifacts:
      - build/**/outputs/**/*.apk
      - build/**/outputs/**/*.aab
      - build/**/outputs/**/mapping.txt
      - flutter_drive.log
  ios-workflow:
    name: iOS Workflow
    instance_type: mac_mini_m2
    environment:
      flutter: 3.35.3
      xcode: 16.4
      cocoapods: 1.16.2
      groups:
        - google_credentials
      vars:
        FIREBASE_PROJECT: "testcodemagic-250f0"
        BUNDLE_ID: "com.lumziorbit.codemagic"
        TEST_BUNDLE_ID: "com.lumziorbit.codemagic.uitests.xctrunner"
    scripts:
      - name: Configure Firebase access
        script: |
          set -e
          echo $GCLOUD_KEY_FILE | base64 --decode > ./gcloud_key_file.json          
          gcloud auth activate-service-account --key-file=gcloud_key_file.json
          gcloud --quiet config set project $FIREBASE_PROJECT
      - name: Build app for testing
        script: |
          set -ex
          
          flutter build ios integration_test/app_test.dart --release
          
          cd ios
          xcodebuild \
            -workspace Runner.xcworkspace \
            -scheme Runner \
            -config Flutter/Release.xcconfig \
            -derivedDataPath "../build/ios_integ" \
            -sdk iphoneos \
            build-for-testing
      - name: Package tests bundle
        script: |
          set -ex
          cd ./build/ios_integ/Build/Products
          zip -r "ios_tests.zip" *-iphoneos *.xctestrun
      - name: Run tests in Firebase Test Lab
        script: gcloud firebase test ios run --test "build/ios_integ/Build/Products/ios_tests.zip"
    artifacts:
      - "**/ios_tests.zip"